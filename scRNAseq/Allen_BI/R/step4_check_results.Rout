
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(data.table)
> library(tidyr)
> library(stringr)
> library(ggplot2)
> library(Rtsne)
> 
> theme_set(theme_classic())
> 
> # ------------------------------------------------------------------------
> # check the cell cluster information
> # ------------------------------------------------------------------------
> 
> clusters = readRDS("../data/final_hvg_clust.rds")
> dim(clusters)
[1] 15858    75
> names(clusters)
 [1] "sample_name"          "PC1"                  "PC2"                 
 [4] "PC3"                  "PC4"                  "PC5"                 
 [7] "PC6"                  "PC7"                  "PC8"                 
[10] "PC9"                  "PC10"                 "PC11"                
[13] "PC12"                 "PC13"                 "PC14"                
[16] "PC15"                 "PC16"                 "PC17"                
[19] "PC18"                 "PC19"                 "PC20"                
[22] "PC21"                 "PC22"                 "PC23"                
[25] "PC24"                 "PC25"                 "PC26"                
[28] "PC27"                 "PC28"                 "PC29"                
[31] "PC30"                 "PC31"                 "PC32"                
[34] "PC33"                 "PC34"                 "PC35"                
[37] "PC36"                 "PC37"                 "PC38"                
[40] "PC39"                 "PC40"                 "PC41"                
[43] "PC42"                 "PC43"                 "PC44"                
[46] "PC45"                 "PC46"                 "PC47"                
[49] "PC48"                 "PC49"                 "PC50"                
[52] "log10_total_features" "sex"                  "brain_hemisphere"    
[55] "brain_subregion"      "facs_sort_criteria"   "class"               
[58] "cluster"              "cell_type"            "HVG_TSNE1"           
[61] "HVG_TSNE2"            "KM_5"                 "KM_6"                
[64] "KM_7"                 "KM_8"                 "KM_9"                
[67] "KM_10"                "KM_11"                "KM_12"               
[70] "KM_13"                "KM_14"                "KM_15"               
[73] "sc3_5_clusters"       "sc3_10_clusters"      "sc3_15_clusters"     
> 
> clusters[1:2,c(1,52:61)]
          sample_name log10_total_features sex brain_hemisphere brain_subregion
1 F1S4_160106_001_B01             3.720655   M                L              L5
2 F1S4_160106_001_C01             3.916349   M                L              L5
  facs_sort_criteria         class             cluster cell_type  HVG_TSNE1
1      NeuN-positive     GABAergic Inh L4-6 SST B3GAT2       Inh -17.128998
2      NeuN-positive Glutamatergic Exc L5-6 RORB TTC12       Exc  -7.126374
  HVG_TSNE2
1  48.11234
2 -12.36402
> table(clusters$cell_type)

  Astro    Endo     Exc     Inh   Micro   Oligo     OPC unknown 
    288       9   10473    4151      63     313     238     323 
> 
> dat = fread("../data/cts_all_but_Micro_Endo_ordered_by_annotation.txt.gz")
> dim(dat)
[1]  1519 15396
> dat[1:2,1:3]
   gene_name F1S4_160106_001_B01 F1S4_160106_002_G01
1:      GAD1                2495                3230
2:     KCNQ3                1465                   0
> 
> table(names(dat)[-1] %in% clusters$sample_name)

 TRUE 
15395 
> 
> table(clusters$cell_type)

  Astro    Endo     Exc     Inh   Micro   Oligo     OPC unknown 
    288       9   10473    4151      63     313     238     323 
> mat1 = match(names(dat)[-1], clusters$sample_name)
> table(clusters$cell_type[mat1])

Astro   Exc   Inh Oligo   OPC 
  287 10434  4131   310   233 
> 
> # ------------------------------------------------------------------------
> # Read in the losses
> # ------------------------------------------------------------------------
> 
> ds_loss = fread("../auto_encoder_plots/AE_sklearn_loss.csv")
> lc_loss = fread("../auto_encoder_plots/lc_AE_sklearn_loss.csv")
> 
> dim(ds_loss)
[1] 499   3
> dim(lc_loss)
[1] 499   3
> ds_loss[1:2,]
   epoch_idx train_loss valid_loss
1:         1 0.02453848 0.02433507
2:         2 0.02426321 0.02416767
> lc_loss[1:2,]
   epoch_idx train_loss valid_loss
1:         1 0.02441878 0.02426026
2:         2 0.02418037 0.02412835
> 
> table(ds_loss$epoch_idx == 1:499)

TRUE 
 499 
> table(lc_loss$epoch_idx == 1:499)

TRUE 
 499 
> 
> loss = merge(ds_loss, lc_loss, by="epoch_idx", 
+              suffixes=c("_dense", "_local"))
> dim(loss)
[1] 499   5
> loss[1:2,]
   epoch_idx train_loss_dense valid_loss_dense train_loss_local
1:         1       0.02453848       0.02433507       0.02441878
2:         2       0.02426321       0.02416767       0.02418037
   valid_loss_local
1:       0.02426026
2:       0.02412835
> 
> summary(loss)
   epoch_idx     train_loss_dense  valid_loss_dense  train_loss_local 
 Min.   :  1.0   Min.   :0.02198   Min.   :0.02266   Min.   :0.02222  
 1st Qu.:125.5   1st Qu.:0.02204   1st Qu.:0.02270   1st Qu.:0.02225  
 Median :250.0   Median :0.02212   Median :0.02273   Median :0.02229  
 Mean   :250.0   Mean   :0.02221   Mean   :0.02276   Mean   :0.02241  
 3rd Qu.:374.5   3rd Qu.:0.02227   3rd Qu.:0.02277   3rd Qu.:0.02240  
 Max.   :499.0   Max.   :0.02454   Max.   :0.02434   Max.   :0.02442  
 valid_loss_local 
 Min.   :0.02248  
 1st Qu.:0.02250  
 Median :0.02251  
 Mean   :0.02260  
 3rd Qu.:0.02257  
 Max.   :0.02426  
> loss_long = pivot_longer(loss, cols=!epoch_idx, names_to = "loss_type", 
+                          values_to = "loss_value")
> dim(loss_long)
[1] 1996    3
> loss_long[1:2,]
# A tibble: 2 × 3
  epoch_idx loss_type        loss_value
      <int> <chr>                 <dbl>
1         1 train_loss_dense     0.0245
2         1 valid_loss_dense     0.0243
> 
> loss_long$data = str_extract(loss_long$loss_type, "[:alpha:]+(?=_)")
> loss_long$NN   = str_extract(loss_long$loss_type, "(?<=loss_)[:alpha:]+")
> 
> dim(loss_long)
[1] 1996    5
> loss_long[1:2,]
# A tibble: 2 × 5
  epoch_idx loss_type        loss_value data  NN   
      <int> <chr>                 <dbl> <chr> <chr>
1         1 train_loss_dense     0.0245 train dense
2         1 valid_loss_dense     0.0243 valid dense
> 
> g1 = ggplot(loss_long, 
+             aes(x=epoch_idx, y=loss_value, color=NN, group=loss_type)) + 
+   geom_line(aes(linetype=data)) + xlab("Epoch Index") + ylab("Loss")
> 
> pdf("../auto_encoder_plots/AE_vs_lc_AE_sklearn_loss.pdf", 
+     width=4, height=2.7)
> g1
> dev.off()
null device 
          1 
> 
> # ------------------------------------------------------------------------
> # Read in encoding using locally connected AE
> # ------------------------------------------------------------------------
> 
> encoding = fread("../auto_encoder_plots/lc_AE_sklearn_latent_output.csv")
> dim(encoding)
[1] 3079   21
> 
> encoding[1:2,]
          d1        d2        d3 d4       d5        d6 d7       d8        d9
1: 0.7899817 0.7291707 1.5505478  0 1.165602 0.3719109  0 1.226159 0.3580858
2: 1.0172300 0.4391986 0.9050935  0 1.187467 0.9958286  0 1.098437 0.3214748
         d10      d11       d12       d13       d14       d15       d16
1: 0.7538776 1.351136 0.8139971 1.0445670 0.2302014 0.9487479 0.7234905
2: 1.5031459 1.550558 0.9894836 0.1078646 1.1263627 1.0564395 1.6000586
         d17       d18       d19 d20            cellname
1: 1.3015196 0.9992328 0.0000000   0 F1S4_160721_069_B01
2: 0.6382565 0.1978686 0.7322061   0 F1S4_160831_093_D01
> 
> edat = data.matrix(encoding[,1:20])
> summary(edat)
       d1               d2                d3               d4   
 Min.   :0.0000   Min.   : 0.0000   Min.   :0.0000   Min.   :0  
 1st Qu.:0.6451   1st Qu.: 0.6103   1st Qu.:0.4701   1st Qu.:0  
 Median :0.9083   Median : 0.8151   Median :0.7030   Median :0  
 Mean   :1.0457   Mean   : 1.0044   Mean   :0.9173   Mean   :0  
 3rd Qu.:1.1935   3rd Qu.: 1.0738   3rd Qu.:1.0512   3rd Qu.:0  
 Max.   :8.4754   Max.   :10.6191   Max.   :8.2147   Max.   :0  
       d5               d6               d7          d8        
 Min.   :0.0000   Min.   :0.0000   Min.   :0   Min.   :0.0000  
 1st Qu.:0.4731   1st Qu.:0.5742   1st Qu.:0   1st Qu.:0.7576  
 Median :0.6723   Median :0.7931   Median :0   Median :0.9946  
 Mean   :0.8424   Mean   :0.8772   Mean   :0   Mean   :1.0349  
 3rd Qu.:0.9181   3rd Qu.:1.0446   3rd Qu.:0   3rd Qu.:1.2675  
 Max.   :7.8319   Max.   :5.6886   Max.   :0   Max.   :3.4338  
       d9              d10               d11              d12         
 Min.   :0.0000   Min.   : 0.0000   Min.   :0.0000   Min.   : 0.0000  
 1st Qu.:0.7882   1st Qu.: 0.5643   1st Qu.:0.6715   1st Qu.: 0.5725  
 Median :1.0120   Median : 0.9508   Median :1.0093   Median : 0.8137  
 Mean   :1.0708   Mean   : 1.1293   Mean   :1.1927   Mean   : 1.1324  
 3rd Qu.:1.2629   3rd Qu.: 1.3242   3rd Qu.:1.5236   3rd Qu.: 1.1346  
 Max.   :5.4671   Max.   :10.2889   Max.   :6.2031   Max.   :13.2448  
      d13               d14               d15               d16        
 Min.   : 0.0000   Min.   : 0.0000   Min.   : 0.0000   Min.   :0.0000  
 1st Qu.: 0.4462   1st Qu.: 0.6663   1st Qu.: 0.5025   1st Qu.:0.7091  
 Median : 0.7481   Median : 0.9724   Median : 0.7552   Median :0.9948  
 Mean   : 1.0128   Mean   : 1.1674   Mean   : 1.1032   Mean   :1.0051  
 3rd Qu.: 1.0475   3rd Qu.: 1.3205   3rd Qu.: 1.1006   3rd Qu.:1.2635  
 Max.   :14.1693   Max.   :10.3958   Max.   :14.5184   Max.   :3.4261  
      d17              d18               d19               d20   
 Min.   :0.0000   Min.   : 0.0000   Min.   : 0.0000   Min.   :0  
 1st Qu.:0.6416   1st Qu.: 0.6702   1st Qu.: 0.9311   1st Qu.:0  
 Median :0.8815   Median : 0.9601   Median : 1.2480   Median :0  
 Mean   :1.0862   Mean   : 1.1607   Mean   : 1.4183   Mean   :0  
 3rd Qu.:1.1969   3rd Qu.: 1.3092   3rd Qu.: 1.5674   3rd Qu.:0  
 Max.   :9.9469   Max.   :10.4461   Max.   :11.9765   Max.   :0  
> 
> n_non_zero = colSums(edat > 0)
> n_non_zero
  d1   d2   d3   d4   d5   d6   d7   d8   d9  d10  d11  d12  d13  d14  d15  d16 
3054 3063 3046    0 3049 3040    0 3072 3075 3025 3070 3048 2980 3057 3067 3060 
 d17  d18  d19  d20 
3063 3064 2972    0 
> 
> edat = edat[, n_non_zero > 20]
> dim(edat)
[1] 3079   17
> 
> edat[edat > 4] = 4
> set.seed(100)
> date()
[1] "Mon Jan 10 20:53:43 2022"
> tsne = Rtsne(edat, pca = FALSE)
> date()
[1] "Mon Jan 10 20:53:51 2022"
> 
> df_tsne = data.frame(tsne$Y)
> dim(df_tsne)
[1] 3079    2
> 
> table(encoding$cellname %in% clusters$sample_name)

TRUE 
3079 
> mat1 = match(encoding$cellname, clusters$sample_name)
> df_tsne$cell_type = clusters$cell_type[mat1]
> table(df_tsne$cell_type)

Astro   Exc   Inh Oligo   OPC 
   59  2120   802    62    36 
> 
> dim(df_tsne)
[1] 3079    3
> df_tsne[1:2,]
         X1        X2 cell_type
1  20.74695 27.301728       Inh
2 -16.93241  7.823303       Exc
> 
> cols = c("#FF7F00","orchid", "red","dodgerblue2","black")
> 
> gp1 = ggplot(df_tsne, aes(X1,X2,col=cell_type)) + 
+   geom_point(size=0.2,alpha=0.6) + theme_classic() + 
+   scale_color_manual(values=cols) + 
+   guides(color = guide_legend(override.aes = list(size=3)))
> 
> gp1
> 
> pdf("../auto_encoder_plots/lc_AE_sklearn_TSNE.pdf", width=3.5, height=2.7)
> gp1
> dev.off()
pdf 
  2 
> 
> sessionInfo()
R version 4.1.2 (2021-11-01)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] Rtsne_0.15        ggplot2_3.3.5     stringr_1.4.0     tidyr_1.1.4      
[5] data.table_1.14.2

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.7        pillar_1.6.4      compiler_4.1.2    R.methodsS3_1.8.1
 [5] R.utils_2.11.0    tools_4.1.2       digest_0.6.29     lifecycle_1.0.1  
 [9] tibble_3.1.6      gtable_0.3.0      pkgconfig_2.0.3   rlang_0.4.12     
[13] DBI_1.1.1         cli_3.1.0         withr_2.4.3       dplyr_1.0.7      
[17] generics_0.1.1    vctrs_0.3.8       grid_4.1.2        tidyselect_1.1.1 
[21] glue_1.5.1        R6_2.5.1          fansi_0.5.0       purrr_0.3.4      
[25] farver_2.1.0      magrittr_2.0.1    scales_1.1.1      ellipsis_0.3.2   
[29] assertthat_0.2.1  colorspace_2.0-2  labeling_0.4.2    utf8_1.2.2       
[33] stringi_1.7.6     munsell_0.5.0     crayon_1.4.2      R.oo_1.24.0      
> q(save="no")
> proc.time()
   user  system elapsed 
 10.808   0.639  11.714 
